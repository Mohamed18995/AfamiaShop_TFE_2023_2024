{% extends 'base.html.twig' %}

{% block title %}AfamiaShop | {% trans %}Cart{% endtrans %}{% endblock %}

{% block body %}
<div class="main_content">
    <div class="section">
        <div class="container">
            {% if cart.items is not empty %}
                <div class="row">
                    <div class="col-12">
                        <div class="table-responsive shop_cart_table">
                            <table class="table">
                                <thead>
                                    <tr>
                                        <th class="product-thumbnail">{% trans %}Picture{% endtrans %}</th>
                                        <th class="product-name">{% trans %}Product{% endtrans %}</th>
                                        <th class="product-price">{% trans %}Price{% endtrans %}</th>
                                        <th class="product-quantity">{% trans %}Quantity{% endtrans %}</th>
                                        <th class="product-subtotal">{% trans %}Total{% endtrans %}</th>
                                        <th class="product-remove">{% trans %}Remove{% endtrans %}</th>
                                    </tr>
                                </thead>
                                <tbody id="cart-items">
                                    {% for item in cart.items %}
                                        <tr data-product-id="{{ item.product.id }}">
                                            <td class="product-thumbnail">
                                                <a><img width="50" alt="product1" src="/assets/images/products/{{ item.product.imageUrls[0] }}"></a>
                                            </td>
                                            <td data-title="Product" class="product-name"><a>{{ item.product.name | trans }}</a></td>
                                            <td data-title="Price" class="product-price">€ {{ (item.product.price / 100) | number_format(2, '.', ',') }}</td>
                                            <td data-title="Quantity" class="product-quantity">
                                                <div class="quantity">
                                                    <input type="button" value="-" class="minus" data-product-id="{{ item.product.id }}">
                                                    <input type="text" name="quantity" value="{{ item.quantity }}" title="Qty" size="4" class="qty" data-product-id="{{ item.product.id }}" readonly>
                                                    <input type="button" value="+" class="plus" data-product-id="{{ item.product.id }}">
                                                </div>
                                            </td>
                                            <td data-title="Total" class="product-subtotal">€ {{ (item.sub_total / 100) | number_format(2, '.', ',') }}</td>
                                            <td data-title="Remove" class="product-remove"><a href="#" class="remove" data-product-id="{{ item.product.id }}"><i class="fa fa-trash"></i></a></td>
                                        </tr>
                                    {% endfor %}
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-12">
                        <div class="medium_divider"></div>
                        <div class="divider center_icon"></div>
                        <div class="medium_divider"></div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        <div class="border p-3 p-md-4">
                            <div class="table-responsive">
                                <table class="table">
                                    <tbody>
                                        <tr>
                                            <td class="cart_total_htva">{% trans %}Cart Subtotal Htva{% endtrans %}</td>
                                            <td class="cart_sub_total_amount_htva">€ {{ (cart.sub_total_htva / 100) | number_format(2, '.', ',') }}</td>
                                        </tr>
                                        <tr>
                                            <td class="cart_tva">{% trans %}TVA{% endtrans %}</td>
                                            <td class="cart_tva">€ {{ (cart.tva / 100) | number_format(2, '.', ',') }}</td>
                                        </tr>
                                    </tbody>
                                    <tbody>
                                        <tr>
                                            <th class="cart_total_label">{% trans %}Cart Subtotal {% endtrans %}</th>
                                            <th class="cart_sub_total_amount">€ {{ (cart.sub_total / 100) | number_format(2, '.', ',') }}</th>
                                        </tr>
                                    </tbody>
                                </table>
                            </div>
                            <div class="btns-group">
                                <a href="/" class="btn btn-fill-out">{% trans %}Continue Shopping{% endtrans %}</a>
                                <a href="/order/create" class="btn btn-fill-out">{% trans %}Proceed To CheckOut{% endtrans %}</a>
                            </div>
                        </div>
                    </div>
                </div>
            {% else %}
                <div class="row justify-content-center">
                    <div class="col-md-8">
                        <div class="text-center order_complete">
                            <div class="heading_s1">
                                <h3>{% trans %}Your AfamiaShop Cart is empty{% endtrans %}</h3>
                            </div>
                            <p>{% trans %}Press the button and discover our products{% endtrans %}</p>
                            <a href="/shop" class="btn btn-fill-out">{% trans %}Discover our products{% endtrans %}</a>
                        </div>
                    </div>
                </div>
            {% endif %}
        </div>
    </div>
</div>
<script>
document.addEventListener('DOMContentLoaded', function() {
    const updateQuantity = async (productId, action) => {
        try {
            const response = await fetch(`/cart/${action}/${productId}/1`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest',
                },
            });
            const data = await response.json();

            if (response.ok) {
                console.log('Response Data:', data);
                const cartItem = document.querySelector(`tr[data-product-id="${productId}"]`);

                // Update quantity and subtotal in the table row
                cartItem.querySelector('.qty').value = data.items.find(item => item.product.id == productId).quantity;
                cartItem.querySelector('.product-subtotal').innerText = `€ ${(data.items.find(item => item.product.id == productId).sub_total / 100).toFixed(2)}`;

                // Update cart totals
                document.querySelector('.cart_sub_total_amount_htva').innerText = `€ ${(data.sub_total_htva / 100).toFixed(2)}`;
                document.querySelector('.cart_tva').innerText = `€ ${(data.tva / 100).toFixed(2)}`;
                document.querySelector('.cart_sub_total_amount').innerText = `€ ${(data.sub_total / 100).toFixed(2)}`;
            } else {
                console.error('Failed to update quantity');
            }
        } catch (error) {
            console.error('Error:', error);
        }
    };

    document.querySelectorAll('.plus').forEach(button => {
        button.addEventListener('click', () => {
            const productId = button.getAttribute('data-product-id');
            console.log(`Plus button clicked for product ID: ${productId}`);
            updateQuantity(productId, 'add');
        });
    });

    document.querySelectorAll('.minus').forEach(button => {
        button.addEventListener('click', () => {
            const productId = button.getAttribute('data-product-id');
            console.log(`Minus button clicked for product ID: ${productId}`);
            updateQuantity(productId, 'remove');
        });
    });

    document.addEventListener('DOMContentLoaded', function() {
            const updateQuantity = async (productId, action) => {
                const response = await fetch(`/cart/${action}/${productId}/1`, { method: 'POST' });
                if (response.ok) {
                    location.reload(); // Recharge la page après la mise à jour du panier
                }
            };

            document.querySelectorAll('.btn-addtocart').forEach(button => {
                button.addEventListener('click', () => {
                    const productId = button.getAttribute('data-product-id');
                    updateQuantity(productId, 'add'); // Ici, 'add' est l'action pour ajouter au panier
                });
            });
    });
});
</script>
{% endblock %}
